@using Microsoft.AspNetCore.Identity
@using System.Text.Json;
@using TaskManagerSolution.Shared.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@page "/register"

<h3>Register</h3>
@if (ShowError)
{
    <div class="alert alert-danger">
        @ErrorMessage
    </div>
}

<form @onsubmit="RegisterUser">
    <div class="form-group">
        <label for="username">Username</label>
        <input @bind="model.Username" type="text" class="form-control" id="username" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input @bind="model.Email" type="email" class="form-control" id="email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input @bind="model.Password" type="password" class="form-control" id="password" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>

@code {
    private RegisterModel model = new RegisterModel();
    private string ErrorMessage { get; set; }
    private bool ShowError => !string.IsNullOrEmpty(ErrorMessage);

    private async Task RegisterUser()
    {
        Console.WriteLine("RegisterUser called");

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/Account/Register", model);
            var responseData = await response.Content.ReadAsStringAsync();

            Console.WriteLine("Received Data: " + responseData); // Log received data

            if (response.IsSuccessStatusCode)
            {
                // Indicate success
                ErrorMessage = "Registration successful!";
                // Navigate or provide an option to go to the next step
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                // Deserialize the errors here
                var errors = JsonSerializer.Deserialize<List<IdentityError>>(responseData);
                // Join the errors into a single string message
                ErrorMessage = string.Join(", ", errors.Select(e => e.Description));
            }
        }
        catch (JsonException jsonException)
        {
            // Log JSON errors
            Console.WriteLine("JSON Error: " + jsonException.Message);
            ErrorMessage = "There was a problem processing your request.";
        }
    }
}

