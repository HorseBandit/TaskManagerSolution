@using Microsoft.AspNetCore.Identity
@using TaskManagerSolution.Shared.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@page "/register"

<h3>Register</h3>
@if (ShowError)
{
    <div class="alert alert-danger">
        @ErrorMessage
    </div>
}

<form @onsubmit="RegisterUser">
    <div class="form-group">
        <label for="username">Username</label>
        <input @bind="model.Username" type="text" class="form-control" id="username" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input @bind="model.Email" type="email" class="form-control" id="email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input @bind="model.Password" type="password" class="form-control" id="password" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>

@code {
    private RegisterModel model = new RegisterModel();
    private string ErrorMessage { get; set; }
    private bool ShowError => !string.IsNullOrEmpty(ErrorMessage);

    private async Task RegisterUser()
    {
        HttpResponseMessage response = null;
        try
        {
            response = await HttpClient.PostAsJsonAsync("api/Account/Register", model);
        }
        catch (Exception e)
        {
            ErrorMessage = "An unknown error occurred while registering.";
            return;
        }

        if (response.IsSuccessStatusCode)
        {
            // Indicate success
            ErrorMessage = "Registration successful!";
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            // Try to get additional error details from the response
            var errorDetails = await response.Content.ReadFromJsonAsync<List<IdentityError>>();
            if (errorDetails != null && errorDetails.Count > 0)
            {
                ErrorMessage = string.Join("\n", errorDetails.Select(e => e.Description));
            }
            else
            {
                ErrorMessage = "There was an error registering the user.";

                // Debugging lines
                Console.WriteLine("ShowError: " + ShowError);
                Console.WriteLine("ErrorMessage: " + ErrorMessage);
            }
            // Refresh the component
            StateHasChanged();
        }
    }
}

